{"version":3,"sources":["src/utils/event-listeners.ts","src/slider.ts","src/index.ts"],"names":[],"mappings":"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","file":"src.46a0467b.js","sourceRoot":"..","sourcesContent":["export function addMultiListener({el, events, callback}: { el: HTMLElement, events: Array<string>, callback: any }): void {\n    events.forEach(e => el.addEventListener(e, callback, false));\n}\n\nexport function removeMultiListener({el, events, callback}: { el: HTMLElement, events: Array<string>, callback: any }): void {\n    events.forEach(e => el.removeEventListener(e, callback, false));\n}\n\n","import {addMultiListener, removeMultiListener} from './utils/event-listeners';\nimport {ISliderParameters} from './types/slider-parameters.interface';\n\nexport class Slider {\n    private readonly sliderContainer;\n    private dotsWrapper: HTMLElement;\n    private readonly arrowLeft: HTMLElement;\n    private readonly arrowRight: HTMLElement;\n    private readonly swipe: Boolean;\n    private readonly autoHeight: Boolean;\n    private transition: { speed: any, easing: any };\n    private readonly afterChangeSlide: Function;\n    private curSlide: number;\n    private slidesCount: number;\n    private sliderInner: HTMLElement;\n    private curLeft: number;\n    private slideW: number;\n    private allSlides: Array<HTMLElement>;\n    private loadedCnt: number;\n    private startX: number;\n    private startY: number;\n    private isAnimating: Boolean;\n    private moveX: number;\n    private moveY: number;\n    private stayAtCur: Boolean;\n    private dir: string;\n\n    constructor(\n        {\n            target = document.querySelector(\".slider\"),\n            dotsWrapper = document.querySelector(\".dots-wrapper\"),\n            arrowLeft = document.querySelector(\".arrow-left\"),\n            arrowRight = document.querySelector(\".arrow-right\"),\n            swipe = true,\n            autoHeight = true,\n            afterChangeSlide = () => {\n            },\n            transition = {speed: 300, easing: \"\"}\n        }: ISliderParameters\n    ) {\n        this.sliderContainer = target;\n        this.dotsWrapper = dotsWrapper;\n        this.arrowLeft = arrowLeft;\n        this.arrowRight = arrowRight;\n        this.swipe = swipe;\n        this.autoHeight = autoHeight;\n        this.transition = transition;\n        this.afterChangeSlide = afterChangeSlide;\n        this.startSwipe = this.startSwipe.bind(this);\n        this.swipeEnd = this.swipeEnd.bind(this);\n        this.swipeMove = this.swipeMove.bind(this);\n        this.updateSliderDimension = this.updateSliderDimension.bind(this);\n        this.handleDotsClick = this.handleDotsClick.bind(this);\n        this.gotoSlide = this.gotoSlide.bind(this);\n        this.handleLeftArrowClick = this.handleLeftArrowClick.bind(this);\n        this.handleRightArrowClick = this.handleRightArrowClick.bind(this);\n\n        this.init();\n        this.registerEventListeners();\n    }\n\n    private registerEventListeners(): void {\n        this.dotsWrapper.addEventListener(\"click\", this.handleDotsClick);\n        window.addEventListener(\"resize\", this.updateSliderDimension);\n    }\n\n    private handleDotsClick(event: MouseEvent): void {\n        let target = event.target as HTMLButtonElement;\n        if (target.nodeName === \"BUTTON\") {\n            this.curSlide = parseInt(target.getAttribute(\"data-slide\"));\n            this.gotoSlide();\n        }\n    }\n\n    private buildDots(): void {\n        for (let i = 0; i < this.slidesCount; i++) {\n            let dot = document.createElement(\"li\");\n            dot.insertAdjacentHTML('beforeend', `<button data-slide=\"${i + 1}\">slide-${i + 1}</button>`);\n            this.dotsWrapper.appendChild(dot);\n        }\n    }\n\n    private getCurLeft(): void {\n        this.curLeft = parseInt(window.getComputedStyle(this.sliderInner).getPropertyValue('transform').split(',')[4], 10);\n    }\n\n    private gotoSlide(): void {\n        this.sliderInner.style.transition = `transform ${this.transition.speed}ms ${this.transition.easing}`;\n        this.sliderInner.style.transform = `translateX(${-this.curSlide * this.slideW }px)`;\n        this.sliderContainer.classList.add('isAnimating');\n\n\n        setTimeout(() => {\n            this.sliderInner.style.transition = \"\";\n            this.sliderContainer.classList.remove('isAnimating');\n        }, this.transition.speed);\n        this.setDot();\n        if (this.autoHeight) {\n            this.sliderContainer.style.height = this.allSlides[this.curSlide].offsetHeight + \"px\";\n        }\n        this.afterChangeSlide(this);\n    }\n\n    private init(): void {\n        this.addSliderInner();\n        this.curLeft = 0;\n        this.sliderInner = this.sliderContainer.querySelector(\".slider-inner\");\n        this.loadedCnt = 0;\n        this.curSlide = 1;\n        this.appendClones();\n        this.allSlides = Array.prototype.slice.call(this.sliderContainer.querySelectorAll(\".slide\"));\n        this.slidesCount = this.allSlides.length;\n        this.addSlideWidth();\n        this.buildDots();\n        this.setDot();\n        this.initArrows();\n\n        if (this.swipe) {\n            addMultiListener({el: this.sliderInner, events: ['mousedown', 'touchstart'], callback: this.startSwipe});\n        }\n\n        this.isAnimating = false;\n    }\n\n    private addSliderInner() {\n        let nowHTML = this.sliderContainer.innerHTML;\n        this.sliderContainer.innerHTML = '<div class=\"slider-inner\">' + nowHTML + \"</div>\";\n    }\n\n    private addSlideWidth(): void {\n        this.sliderInner.style.width = (this.slidesCount + 2) * 100 + \"%\";\n        this.allSlides.forEach(slide=> {\n            slide.style.width = 100 / (this.slidesCount + 2) + \"%\";\n            this.loadedImg(slide);\n        });\n    }\n\n    private appendClones(): void {\n        let allSlides = this.sliderInner.querySelectorAll('.slide');\n        let cloneFirst = allSlides[0].cloneNode(true);\n        this.sliderInner.appendChild(cloneFirst);\n        let cloneLast = allSlides[allSlides.length - 1].cloneNode(true);\n        this.sliderInner.insertBefore(cloneLast, this.sliderInner.firstChild);\n    }\n\n    private loadedImg(el): void {\n        let loaded = false;\n        let loadHandler = () => {\n            if (loaded) {\n                return;\n            }\n            loaded = true;\n            this.loadedCnt++;\n            if (this.loadedCnt >= this.slidesCount + 2) {\n                this.updateSliderDimension();\n            }\n        };\n        let img: HTMLImageElement = el.querySelector(\"img\");\n        if (img) {\n            img.onload = loadHandler;\n            img.src = img.getAttribute(\"data-src\");\n            img.style.display = \"block\";\n            if (img.complete) {\n                loadHandler();\n            }\n        } else {\n            this.updateSliderDimension();\n        }\n    }\n\n    private startSwipe(e): any {\n        let touch = e;\n        this.getCurLeft();\n        if (!this.isAnimating) {\n            if (e.type === \"touchstart\") {\n                touch = e.targetTouches[0] || e.changedTouches[0];\n            }\n            this.startX = touch.pageX;\n            this.startY = touch.pageY;\n\n            addMultiListener({el: this.sliderInner, events: ['mousemove', 'touchmove'], callback: this.swipeMove});\n            addMultiListener({el: document.body, events: ['mouseup', 'touchend'], callback: this.swipeEnd});\n        }\n    }\n\n    private swipeMove(e): void {\n        let touch = e;\n        if (e.type === \"touchmove\") {\n            touch = e.targetTouches[0] || e.changedTouches[0];\n        }\n        this.moveX = touch.pageX;\n        this.moveY = touch.pageY;\n\n        // for scrolling up and down\n        if (Math.abs(this.moveX - this.startX) < 40) return;\n\n        this.isAnimating = true;\n        this.sliderContainer.classList.add('isAnimating');\n        e.preventDefault();\n\n        if (this.curLeft + this.moveX - this.startX > 0 && this.curLeft == 0) {\n            this.curLeft = -this.slidesCount * this.slideW;\n        } else if (this.curLeft + this.moveX - this.startX < -(this.slidesCount + 1) * this.slideW) {\n            this.curLeft = -this.slideW;\n        }\n        this.sliderInner.style.transform = `translateX(${this.curLeft + this.moveX - this.startX}px)`;\n    }\n\n    private swipeEnd(): void {\n        this.getCurLeft();\n\n        let xMinusY = Math.abs(this.moveX - this.startX);\n\n        if (xMinusY == 0) return;\n\n        this.stayAtCur = xMinusY< 40 || typeof this.moveX == \"undefined\";\n        this.dir = this.startX < this.moveX ? \"left\" : \"right\";\n\n        if (!this.stayAtCur) {\n            this.dir == \"left\" ? this.curSlide-- : this.curSlide++;\n\n            if (this.curSlide < 0) {\n                this.curSlide = this.slidesCount;\n            } else if (this.curSlide == this.slidesCount + 2) {\n                this.curSlide = 1;\n            }\n        }\n\n        this.gotoSlide();\n\n        this.startX = null;\n        this.startY = null;\n        this.moveX = null;\n        this.moveY = null;\n\n        this.isAnimating = false;\n        this.sliderContainer.classList.remove('isAnimating');\n        removeMultiListener({el: this.sliderInner, events: ['mousemove', 'touchmove'], callback: this.swipeMove});\n        removeMultiListener({el: document.body, events: ['mouseup', 'touchend'], callback: this.swipeEnd});\n    }\n\n    private handleLeftArrowClick(): void {\n        if (!this.sliderContainer.classList.contains('isAnimating')) {\n            if (this.curSlide == 1) {\n                this.curSlide = this.slidesCount + 1;\n                this.sliderInner.style.transform =  `translateX(${-this.curSlide * this.slideW}px)`;\n            }\n            this.curSlide--;\n            setTimeout(() => {\n                this.gotoSlide();\n            }, 20);\n        }\n    }\n\n    private handleRightArrowClick(): void {\n        if (!this.sliderContainer.classList.contains('isAnimating')) {\n            if (this.curSlide == this.slidesCount) {\n                this.curSlide = 0;\n                this.sliderInner.style.transform = `translateX(${-this.curSlide * this.slideW}px)`;\n            }\n            this.curSlide++;\n            setTimeout(() => {\n                this.gotoSlide();\n            }, 20);\n        }\n    }\n\n    private initArrows(): void {\n        if (this.arrowLeft) this.arrowLeft.addEventListener(\"click\",this.handleLeftArrowClick, false);\n        if (this.arrowRight) this.arrowRight.addEventListener(\"click\", this.handleRightArrowClick, false);\n    }\n\n    private setDot(): void {\n        let targetDot = this.curSlide - 1;\n\n        for (let j = 0; j < this.slidesCount; j++) {\n            this.dotsWrapper.querySelectorAll(\"li\")[j].classList.remove('active');\n        }\n\n        if (this.curSlide - 1 < 0) {\n            targetDot = this.slidesCount - 1;\n        } else if (this.curSlide - 1 > this.slidesCount - 1) {\n            targetDot = 0;\n        }\n        this.dotsWrapper.querySelectorAll(\"li\")[targetDot].classList.add('active')\n    }\n\n    private updateSliderDimension(): void {\n        this.slideW = parseInt(this.sliderContainer.querySelectorAll(\".slide\")[0].offsetWidth, 10);\n        this.sliderInner.style.transform = `translateX(${-this.slideW * this.curSlide})px`;\n\n        if (this.autoHeight) {\n            this.sliderContainer.style.height = this.allSlides[this.curSlide].offsetHeight + \"px\";\n        } else {\n            for (let i = 0; i < this.slidesCount + 2; i++) {\n                if (this.allSlides[i].offsetHeight > this.sliderContainer.offsetHeight) {\n                    this.sliderContainer.style.height = this.allSlides[i].offsetHeight + \"px\";\n                }\n            }\n        }\n        this.afterChangeSlide(this);\n    }\n}\n","import './index.scss'\nimport {Slider} from './slider';\n\nlet slider = new Slider({\n    target: document.querySelector(\".slider\"),\n    dotsWrapper: document.querySelector(\".dots-wrapper\"),\n    arrowLeft: document.querySelector(\".arrow-left\"),\n    arrowRight: document.querySelector(\".arrow-right\")\n});\n"]}